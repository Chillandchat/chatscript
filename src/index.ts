/**
 * Welcome to the...
 *   ____ _     _ _ _  ___        _           _
 *  / ___| |__ (_) | |( _ )   ___| |__   __ _| |_
 * | |   | '_ \| | | |/ _ \/\/ __| '_ \ / _` | __|
 * | |___| | | | | | | (_>  < (__| | | | (_| | |_
 *  \____|_| |_|_|_|_|\___/\/\___|_| |_|\__,_|\__|  CLI
 *
 * codebase!
 *
 * This is the codebase guide for developers viewing this codebase.
 *
 * We have organized the codebase into the following folders:
 * Source:
 *    - runner: This is the where the code for the runner is stored.
 *    - runner/commands: This is where the commands are stored, so it can be accessed when at runtime.
 *    - utils: This is where the utilites are stored (e.g types declorations)
 *    - compiler: This is where the compiler code is stored for easy access
 *
 * Tech stack:
 *    - TypeScript: This is the main language used in the application.
 *    - Socket.io: This is the framework used to create the realtime API.
 *    - Axios: This is the networking library used to communicate to the API.
 *
 * Happy hacking!
 */

import compile from "./compiler/compile";
import run from "./runner/run";
import CompilerError from "./utils/error";
import help from "./utils/help";
import readFile from "./utils/readFile";

if (
  process.argv[process.argv.length - 1] === "compile" ||
  process.argv[process.argv.length - 1] === "run"
) {
  new CompilerError("No input file provided!", "Unknown", "Unknown", "error");
}

if (
  !process.argv.includes("help") &&
  !process.argv.includes("compile") &&
  !process.argv.includes("run")
) {
  new CompilerError(
    "Invalid operation, please enter a valid operation!",
    "Unknown",
    "Unknown",
    "error"
  );
}
if (process.argv[process.argv.length - 1] === "help") {
  help();
}

if (process.argv[process.argv.length - 2] === "compile") {
  compile();
}

if (process.argv[process.argv.length - 2] === "run") {
  const ast: string = String(
    readFile(process.argv[process.argv.length - 1])
  ).replace(
    "This file is automatically generated, DO NOT EDIT DIRECTLY!! \n",
    ""
  );

  run(ast);
}
